# Generated by Django 3.2.9 on 2022-02-21 09:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('quantity', models.CharField(blank=True, max_length=50, null=True, verbose_name='Количество')),
                ('unit_of_measurement', models.CharField(blank=True, choices=[('кг', 'кг'), ('г', 'г'), ('л', 'л'), ('мл', 'мл'), ('шт.', 'шт.'), ('ст.л.', 'ст.л.'), ('ч.л.', 'ч.л.')], max_length=10, null=True, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'unique_together': {('name', 'quantity', 'unit_of_measurement')},
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('image', models.ImageField(blank=True, null=True, upload_to='recipes/%Y/%m/%d/', verbose_name='Изображение')),
                ('cooking_time', models.CharField(max_length=100, verbose_name='Время приготовления')),
                ('archive', models.BooleanField(default=False, verbose_name='Архив')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recipes', related_query_name='recipe', to='book_of_recipes.category', verbose_name='Категория')),
                ('ingredients', models.ManyToManyField(related_name='recipes', to='book_of_recipes.Ingredient', verbose_name='Ингредиенты')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipes', related_query_name='recipe', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
            },
        ),
        migrations.CreateModel(
            name='StepCookingAtRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images_of_steps_for_cooking_at_recipe/%Y/%m/%d/', verbose_name='Изображение')),
                ('recipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='steps_cooking_at_recipe', related_query_name='step_cooking_at_recipe', to='book_of_recipes.recipe', verbose_name='Рецепт')),
            ],
            options={
                'verbose_name': 'Шаг приготовления по рецепту',
                'verbose_name_plural': 'Шаги приготовления по рецепту',
            },
        ),
        migrations.CreateModel(
            name='RecipeComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('text', models.TextField(max_length=1000, verbose_name='Текст комментария')),
                ('email', models.EmailField(max_length=254, verbose_name='Почта')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата написания комментария')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('mptt_level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='book_of_recipes.recipecomments', verbose_name='Родитель')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_comments', related_query_name='recipe_comment', to='book_of_recipes.recipe', verbose_name='Рецепт')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
